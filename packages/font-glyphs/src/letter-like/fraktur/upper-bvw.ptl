$$include '../../meta/macros.ptl'

import [mix fallback] from "@iosevka/util"

glyph-module

glyph-block LetterLike-Fraktur-Upper-BVW : begin
	glyph-block-import Common-Derivatives
	glyph-block-import CommonShapes
	glyph-block-import LetterLike-Fraktur-Common : UpperDf S M F fraktur-stroke change-pen
	glyph-block-import LetterLike-Fraktur-Common : DecoSizeX DecoSizeY SlopeA SlopeB
	glyph-block-import LetterLike-Fraktur-Common : Wave FHook PHexTop PHexBot CutMaskLeft

	define [deriveBoxes box] : begin
		local body : box.padLeft (+1.50 * DecoSizeX)
		local deco : box.padLeft (-0.25 * DecoSizeX)
		return { body deco }

	define [StartStroke mode box profile pRight] : begin
		local { body deco } : deriveBoxes box
		return : fraktur-stroke profile
			g2.ru.start (post@) ([deco.yp 0.625] - 2 * F.thick) [change-pen F]
			~~~ [Wave.vc Wave.LTDecoSize]
			g2.ru.mid deco.left (post@ <-> DecoSizeY) [change-pen M]
			arch.rhs (sw -- S.thick) (blendPre -- null) deco.top 0.4
			match mode
				[Just "P"] : list
					flat body.left [pre@mix@post 0.375]
					virt pre@      body.bot
					curl body.left Descender
				_ : list
					straight.down.mid body.left [pre@mix@post 0.375]
					corner deco.left [post@slope SlopeB]
					virt   [body.xp : pRight * PHexBot] body.bot

	create-glyph 'frak/B' 0x1D505 : glyph-proc
		local df : include : UpperDf 1
		include : df.markSet.capital

		local box : S.box CAP 0 df.leftSB df.rightSB
		local { body deco } : deriveBoxes box

		local leftStroke : include : StartStroke 'B' box S 1
		local rightStroke : include : with-knockout [leftStroke.withPen CutMaskLeft] : union
			fraktur-stroke S
				corner [leftStroke.last].x [leftStroke.last].y
				corner [body.xp PHexBot] body.bot
				decor@ : g2.up.mid (body.right - OX) [pre@mix@post 0.5]
				corner [body.xp 0.625] [body.yp 0.55]
			fraktur-stroke S
				corner deco.left [post@slope SlopeA]
				corner [body.xp PHexTop] body.top
				decor@ : g2.down.mid body.right [pre@mix@post 0.5]
				corner [body.xp 0.625] [body.yp 0.55]
				corner deco.left [pre@slope : 0.5 * SlopeA]

	create-glyph 'frak/P' 0x1D513 : glyph-proc
		local df : include : UpperDf 1
		include : df.markSet.capDesc

		local box : S.box CAP 0 df.leftSB df.rightSB
		local { body deco } : deriveBoxes box

		local leftStroke : include : StartStroke "P" box S 1

		local rightStroke : include : difference
			fraktur-stroke S
				g2 deco.left (post@ <+> Wave.DepthY)
				~~~ [g2 [deco.xp 0.21] (pre@ <+> Wave.DepthY)]
				g2 [deco.xp 0.625] body.bottom
				~~~ [Wave.vDistAfter : 1.5 * Wave.DepthX]
				[g2c.sr SlopeA].end (body.right + 0.25 * DecoSizeX) ([body.yp 0.75] + S.thick)
				~~~ [curl [pre@tang-in 1] [pre@tang-in SlopeB]]
				g2 (pre@ <-> Wave.DepthX) [pre@mix@post 0.5]
				arch.rhs (sw -- S.thick) (blendPre -- {}) body.top
				corner (body.left - S.thick) (pre@ <-> ArchDepthA)
			intersection [leftStroke.withPen CutMaskLeft] [MaskAbove body.yMid]

	create-glyph 'frak/V' 0x1D519 : glyph-proc
		local df : include : UpperDf 1
		include : df.markSet.capital

		local box : S.box CAP 0 df.leftSB df.rightSB
		local { body deco } : deriveBoxes box

		local leftStroke : include : StartStroke 'V' box S 1
		include : with-knockout [leftStroke.withPen CutMaskLeft] : fraktur-stroke S
			corner [leftStroke.last].x [leftStroke.last].y
			[cg2.sr SlopeA].start [body.xp PHexBot] body.bottom
			~~~ [Wave.vDistAfter : 1.5 * Wave.DepthX]
			[g2c.sr SlopeA].end (body.right + 0.25 * DecoSizeX) ([body.yp 0.75] + S.thick)
			~~~ [curl [pre@tang-in 1] [pre@tang-in SlopeB]]
			g2 (pre@ <-> Wave.DepthX) [pre@mix@post 0.5]
			arch.rhs (sw -- S.thick) (blendPre -- {}) body.top
			corner (body.left - S.thick) (pre@ <-> ArchDepthA)

	create-glyph 'frak/W' 0x1D51A : glyph-proc
		local df : include : UpperDf para.diversityM 3
		include : df.markSet.capital

		local box : M.box CAP 0 df.leftSB df.rightSB
		local { body deco } : deriveBoxes box

		local leftStroke : include : StartStroke 'W' box M 0.5 1

		local rightStroke : include : fraktur-stroke M
			corner [leftStroke.last].x [leftStroke.last].y
			corner [deco.xp : 0.5 * PHexBot] box.bottom
			corner deco.xMid [post@slope SlopeB]
			[cg2.sr SlopeA].start [deco.xp : mix 0.5 1 PHexBot] body.bot
			~~~ [Wave.vDistAfter : 0.75 * Wave.DepthX]
			[g2c.sr SlopeA].end (body.right + 0.5 * DecoSizeX) ([body.yp 0.75] + S.thick)
			~~~ [curl [pre@tang-in 1] [pre@tang-in SlopeB]]
			g2 (pre@ <-> 0.75 * Wave.DepthX) [pre@mix@post 0.5]
			arch.rhs (sw -- M.thick) (blendPre -- {}) body.top
			corner body.xMid (body.top - 0.5 * Wave.DepthY)
			~~~ [arch.rhs (sw -- M.thick) (blendPre -- {}) (blendPost -- {}) body.top]
			corner body.left pre@

		local middleStroke : include : fraktur-stroke M
			virt [deco.xp : mix 0.5 1 PHexBot] body.bot
			corner deco.xMid [pre@slope SlopeB]
			~~~ [Wave.vDistAfter : 0.375 * Wave.DepthX]
			corner body.xMid (body.top - 0.5 * Wave.DepthY)
