$$include '../../meta/macros.ptl'

import [mix fallback] from "@iosevka/util"

glyph-module

glyph-block LetterLike-Fraktur-DOQ : begin
	glyph-block-import Common-Derivatives
	glyph-block-import CommonShapes
	glyph-block-import LetterLike-Fraktur-Common : UpperDf S M F T fraktur-stroke change-pen
	glyph-block-import LetterLike-Fraktur-Common : DecoSizeX DecoSizeY SlopeA SlopeB
	glyph-block-import LetterLike-Fraktur-Common : Wave FHook PHexTop PHexBot CutMaskUp CutMaskDown

	create-glyph "frak/D" 0x1D507 : glyph-proc
		local df : include : UpperDf 1
		include : df.markSet.capital

		local box : S.box CAP 0 df.leftSB df.rightSB
		local frame : include : fraktur-stroke S
			cg2.ru.start (box.left - 0.25 * DecoSizeX) box.bottom
			~~~ [g2.right.mid [pre@mix@post (1/3)] (pre@ <+> Wave.DepthY - O)]
			g2 [box.xp 0.625] (pre@ <+> O)
			~~~ ~~~ ~~~ [archv]
			~~~ ~~~ [straight.up.mid (box.right - OX) [box.yp 0.5]]
			~~~ ~~~ [arch.lhs (sw -- S.thick) (blendPost -- {}) box.top]
			corner [T.connL S : box.left - 0.5 * DecoSizeX] [T.connB S : box.top - FHook] [change-pen T]

		local inner : include : intersection
			union
				intersection [MaskAbove : box.yMid - TINY] [frame.withPen CutMaskDown]
				intersection [MaskBelow : box.yMid + TINY] [frame.withPen CutMaskUp]
			fraktur-stroke S
				corner [frame.first 2].x [frame.first 2].y
				~~~ [Wave.vc (0.75 * Wave.DepthX)]
				corner pre@ (box.top - 0.25 * SHook)
				corner pre@ box.top


	define [FrakOShape box] : fraktur-stroke S
		cg2.ru.start (box.left - 0.25 * DecoSizeX) box.bottom
		~~~ [g2.right.mid [pre@mix@post (1/3)] (pre@ <+> Wave.DepthY - O)]
		g2 [box.xp 0.625] (pre@ <+> O)
		~~~ ~~~ ~~~ [archv]
		~~~ ~~~ [straight.up.mid (box.right - OX) [box.yp 0.5]]
		~~~ ~~~ [arch.lhs (sw -- S.thick) (blendPost -- {}) box.top]
		~~~ ~~~ [corner [box.xp 0.25] (box.top - FHook)]
		~~~ ~~~ [corner (pre@ <-> DecoSizeX) (pre@ <+> DecoSizeY)]
		~~~ ~~~ ~~~ [Wave.vc (0.75 * -Wave.DepthX)]
		~~~ [corner [post@mix@pre (1/3)] (post@ <+> Wave.DepthY - O)]

	create-glyph "frak/O" 0x1D512 : glyph-proc
		local df : include : UpperDf 1
		include : df.markSet.capital

		local box : S.box CAP 0 df.leftSB df.rightSB
		include : FrakOShape box

	create-glyph "frak/Q" 0x1D514 : glyph-proc
		local df : include : UpperDf 1
		include : df.markSet.capital

		local box : S.box CAP 0 df.leftSB df.rightSB
		local frame : include : FrakOShape box

		include : with-knockout [frame.withPen CutMaskUp] : fraktur-stroke S
			corner (post@ <+> DecoSizeX) (post@ <+> DecoSizeY)
			corner (box.right + O) (box.bottom + O)
			corner (pre@ <-> 2 * DecoSizeX) [pre@slope SlopeB]
