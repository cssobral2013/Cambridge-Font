$$include '../../meta/macros.ptl'

import [mix linreg clamp fallback] from "@iosevka/util"

glyph-module

glyph-block Letter-Cyrillic-Te-MidHook : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Letter-Shared-Shapes : MidHook

	define [Shape df top pArc slabTop slabBot] : glyph-proc
		local left : [mix df.leftSB df.rightSB 0.3] + OX

		local xTopBarLeft : df.leftSB - SideJut
		local xTopBarRightSym : 2 * left + [HSwToV df.mvs] - xTopBarLeft
		local xTopBarRight : Math.max xTopBarRightSym : mix left df.rightSB 0.475

		include : VBar.l left 0 top df.mvs
		include : HBar.t xTopBarLeft xTopBarRight top df.mvs
		include : MidHook.general
			left   -- (left + [HSwToV df.mvs])
			right  -- df.rightSB
			top    -- top * HBarPos + df.mvs / 4
			ada    -- ArchDepthA * pArc
			adb    -- ArchDepthB * pArc
			sw     -- df.mvs

		if slabTop : begin
			include : VSerif.dl  xTopBarLeft top VJut
			include : VSerif.dr xTopBarRight top VJut

		if slabBot : begin
			include : HSerif.mb (left + [HSwToV : 0.5 * df.mvs]) 0 Jut

	define Config : object
		serifless     { 1                           false false }
		motionSerifed { [mix 1 para.diversityM 0.5] true  false }
		serifed       { [mix 1 para.diversityM 0.5] true  true  }

	foreach { suffix { div doST doSB } } [Object.entries Config] : do
		local df : DivFrame div 3

		create-glyph "cyrl/TeMidHook.\(suffix)" : glyph-proc
			set-width df.width
			include : df.markSet.capDesc
			include : Shape df CAP 1 doST doSB

		create-glyph "cyrl/teMidHook.upright.\(suffix)" : glyph-proc
			set-width df.width
			include : df.markSet.p
			include : Shape df XH [Math.pow HBarPos 0.3] doST doSB

	select-variant 'cyrl/TeMidHook' 0xA68A (follow -- 'T')
	select-variant 'cyrl/teMidHook.upright' (follow -- 'T')
